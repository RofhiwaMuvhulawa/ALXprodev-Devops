#!/bin/bash

# Define constants
REPORT_FILE="pokemon_report.csv"
DATA_DIR="pokemon_data"

# Check if data directory exists
if [ ! -d "$DATA_DIR" ]; then
    echo "Error: Pokemon data directory '$DATA_DIR' not found."
    echo "Please run the batch processing script first."
    exit 1
fi

# Check if any JSON files exist
if [ -z "$(ls -A $DATA_DIR/*.json 2>/dev/null)" ]; then
    echo "Error: No Pokemon data files found in '$DATA_DIR'."
    echo "Please run the batch processing script first."
    exit 1
fi

# Create CSV header
echo "Name,Height (m),Weight (kg)" > "$REPORT_FILE"

# Process each JSON file and extract data
echo "Processing Pokemon data files..."
for file in "$DATA_DIR"/*.json; do
    pokemon_name=$(basename "$file" .json)
    echo "- Extracting data for $pokemon_name"
    if ! jq -r '[.name, (.height/10), (.weight/10)] | @csv' "$file" >> "$REPORT_FILE"; then
        echo "  Warning: Could not process $file. The file may be corrupted."
    fi
done

# Sort the CSV by Pokemon name (excluding header)
echo "Sorting report data..."
header=$(head -n 1 "$REPORT_FILE")
(echo "$header"; tail -n +2 "$REPORT_FILE" | sort) > "${REPORT_FILE}.tmp" && mv "${REPORT_FILE}.tmp" "$REPORT_FILE"

# Display the report
echo "\nCSV Report generated at: $REPORT_FILE"
echo "\n$header"
sed -n '2,$p' "$REPORT_FILE"
echo ""

# Calculate statistics using awk
echo "Calculating statistics..."
awk -F',' 'NR>1 { 
    height += $2; 
    weight += $3; 
    count++;
    
    # Track min/max values
    if (NR == 2 || $2 < min_height) min_height = $2;
    if (NR == 2 || $2 > max_height) max_height = $2;
    if (NR == 2 || $3 < min_weight) min_weight = $3;
    if (NR == 2 || $3 > max_weight) max_weight = $3;
} 
END { 
    if (count > 0) {
        printf "\nPokemon Statistics:\n";
        printf "----------------\n";
        printf "Total Pokemon: %d\n", count;
        printf "Average Height: %.2f m (Range: %.2f - %.2f m)\n", height/count, min_height, max_height;
        printf "Average Weight: %.2f kg (Range: %.2f - %.2f kg)\n", weight/count, min_weight, max_weight;
    } else {
        printf "\nNo Pokemon data available for statistics.\n";
    }
}' "$REPORT_FILE"

echo "\nReport generation complete!"